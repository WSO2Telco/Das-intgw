/* Enter a unique ExecutionPlan */
@Plan:name('HubAnalytics-ExecutionPlan-SMSReports')

/* Enter a unique description for ExecutionPlan */
-- @Plan:description('ExecutionPlan')

/* define streams/tables and write queries here ... */


@Import('org.wso2telco.analytics.hub.stream.processedStatistics:1.0.0')
define stream getProcessedResponse(api string, resourcePath string, method string, responseTime long, serviceTime long, serviceProvider string, apiPublisher string, applicationName string,requestId string, operatorId string,responseCode string,isSuccess bool,msisdn string,direction string,jsonBody string,spOperatorId string, spUserId string, spConsumerKey string,errorMessageId string,errorText string,responseTimeRange string, year int, month int, day int, hour int);

@Export('org.wso2telco.analytics.hub.stream.sendSms.processedStatistics:1.0.0')
define stream sendSMSProcessedResponse (api string, responseTime long, serviceTime long, serviceProvider string, apiPublisher string, applicationName string, operatorId string,responseCode string,msisdn string,direction string,eventType string,clientCorrelator string, senderAddress string, address string, status string, message string, count int, year int, month int, day int, hour int);

@Export('org.wso2telco.analytics.hub.stream.receiveSms.processedStatistics:1.0.0')
define stream receiveSMSProcessedResponse (api string, responseTime long, serviceTime long, serviceProvider string, apiPublisher string, applicationName string, operatorId string, responseCode string,msisdn string,direction string,eventType string, clientCorrelator string, destinationAddress string, operatorCode string, messageId string, message string, senderAddress string, year int, month int, day int, hour int);

@Export('org.wso2telco.analytics.hub.stream.sendSms.deliveryNotification.processedStatistics:1.0.0')
define stream deliveryNotificationProcessedResponse (api string, responseTime long, serviceTime long, serviceProvider string, apiPublisher string, applicationName string, operatorId string, responseCode string,msisdn string,direction string, eventType string, address string,operatorCode string,filterCriteria string, status string, year int, month int, day int, hour int);


/**
* Confirms the response is SMS
*/

@info(name = 'query1')
from getProcessedResponse  [api == 'sms' and isSuccess == true]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,year, month, day, hour
insert into tempSMSResponse;

/**
* Confirms the response is a send SMS response
*/
@info(name = 'query2')
from tempSMSResponse  [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'outboundSMSMessageRequest') is null) == false]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,year, month, day, hour
insert into tempSendSMSResponse;


/**
* Creates a temporary stream to store fields of the json body
*/
@info(name = 'query3')
from tempSendSMSResponse
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,'' as eventType,'' as clientCorrelator,'' as senderAddress,'' as address,'' as status,'' as message,0 as count,year, month, day, hour
insert into tempSendSMSPreProcessedResponse;

/**
* Use the stream processor to extract the fields of the json body and creates the success response
*/
@info(name = 'query4')
from tempSendSMSPreProcessedResponse#wso2TelcoHubAnalytics:getSMSStream(jsonBody,'sendSMS')
select  api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,eventType,clientCorrelator,senderAddress,address,status,message, count, year, month, day, hour
insert into sendSMSProcessedResponse;


/**
* Confirms the response is a receive SMS response
*/
@info(name = 'query5')
from tempSMSResponse  [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'inboundSMSMessageList') is null) == false]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn, direction,jsonBody,year, month, day, hour
insert into tempReceiveSMSResponse;

/**
* Creates a temporary stream to store fields of the json body
*/
@info(name = 'query6')
from tempReceiveSMSResponse
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,'' as eventType,'' as clientCorrelator,'' as destinationAddress, '' as operatorCode,'' as messageId,'' as message,'' as senderAddress,year, month, day, hour
insert into tempReceiveSMSPreProcessedResponse;

/**
* Use the stream processor to extract the fields of the json body and creates the success response
*/
@info(name = 'query7')
from tempReceiveSMSPreProcessedResponse#wso2TelcoHubAnalytics:getSMSStream(jsonBody,'receiveSMS')
select  api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,eventType,clientCorrelator,destinationAddress,operatorCode,messageId,message,senderAddress,year, month, day, hour
insert into receiveSMSProcessedResponse;


/**
* Confirms the response is a delivery notification response
*/
@info(name = 'query8')
from tempSMSResponse [(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification') is null) == false]
select api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,jsonBody,year, month, day, hour
insert into tempDeliveryNotificationSMSPreProcessedResponse;


/**
* Extract the fields of the json body for south bound and creates the success response
*/
@info(name = 'query9')
from tempDeliveryNotificationSMSPreProcessedResponse
select  api,responseTime, serviceTime, serviceProvider,apiPublisher, applicationName, operatorId,responseCode,msisdn,direction,'deliveryNotification' as eventType,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.address'),'string') as address,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.operatorCode'),'string') as operatorCode,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.filterCriteria'),'string') as filterCriteria,
cast(wso2TelcoHubAnalytics:getJSONBody(jsonBody,'deliveryInfoNotification.deliveryInfo.deliveryStatus'),'string') as status,
year, month, day, hour
insert into deliveryNotificationProcessedResponse;
